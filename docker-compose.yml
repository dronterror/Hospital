version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hospital
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=0
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost,http://127.0.0.1
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hospital
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A core worker -l info
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hospital
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    networks:
      - app-network

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A core beat -l info
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hospital
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge