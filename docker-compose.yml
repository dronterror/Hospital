version: "3.8"

networks:
  mynetwork:
    driver: bridge

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=hospital_website.settings
      - POSTGRES_DB=hospital_db
      - POSTGRES_USER=hospital_user
      - POSTGRES_PASSWORD=secretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - mynetwork

  celery_worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A hospital_website worker -l info
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=hospital_website.settings
      - POSTGRES_DB=hospital_db
      - POSTGRES_USER=hospital_user
      - POSTGRES_PASSWORD=secretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
    networks:
      - mynetwork

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=hospital_db
      - POSTGRES_USER=hospital_user
      - POSTGRES_PASSWORD=secretpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - mynetwork

volumes:
  postgres_data: